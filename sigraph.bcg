#-----------------------------------------------------------------------------
class SigraphComponent( GenericMakerModuleComponent ):
  _name = 'sigraph'

  def dependencies( self ):
    return [ 'sigraphlib' ]

  def postInit( self ):
    if not self._initialized:
      GenericMakerModuleComponent.postInit( self )
      global componentsToBuild
      try:
        pa = getInstance( 'pysigraph' )
        if pa:
          pa.postInit()
          if weakDependency( 'pysigraph' ):
            componentsToBuild.append( 'pysigraph' )
      except Exception, e:
        print e

  #def weakDependencies( self ):
    #deps = []
    #for component in [ 'pysigraph' ]:
      #if weakDependency( component ):
        #print 'sigraph weakdep pysigraph OK'
        #deps.append( component )
    #return deps

  def libraries( self ):
    return []

currentComponentDirectory = os.path.dirname( currentComponentFile )
for component in [ 'sigraphlib', 'pysigraph', 'neuron' ]:
  c = options.setdefault( component, {} )
  c[ 'source' ] = os.path.join( currentComponentDirectory, component )
  c[ 'version' ] = '4.0'
# exception:
options[ 'sigraphlib' ][ 'source' ] = os.path.join( currentComponentDirectory, 'sigraph' )

